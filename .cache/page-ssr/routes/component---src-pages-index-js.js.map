{"version":3,"file":"component---src-pages-index-js.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n            tiktok\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      {/*<StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />*/}\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          {/*<a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a>*/}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["React","StaticImage","Bio","data","author","site","siteMetadata","social","name","summary","Link","Layout","location","title","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","Date","getFullYear","Seo","description","metaDescription","defaultTitle","twitter","BlogIndex","siteTitle","posts","allMarkdownRemark","nodes","length","listStyle","map","post","frontmatter","fields","slug","date","__html","excerpt","Head","pageQuery"],"sourceRoot":""}