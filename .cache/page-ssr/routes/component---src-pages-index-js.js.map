{"version":3,"file":"component---src-pages-index-js.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n            tiktok\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      {/*<StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />*/}\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          {/*<a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a>*/}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["React","useStaticQuery","StaticImage","Bio","data","author","site","siteMetadata","social","name","summary","Link","Layout","location","title","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","Date","getFullYear","Seo","description","metaDescription","defaultTitle","twitter","BlogIndex","siteTitle","posts","allMarkdownRemark","nodes","length","listStyle","map","post","frontmatter","fields","slug","date","__html","excerpt","Head","pageQuery"],"sourceRoot":""}