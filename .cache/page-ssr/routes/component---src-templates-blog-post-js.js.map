{"version":3,"file":"component---src-templates-blog-post-js.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n            tiktok\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      {/*<StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />*/}\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          {/*<a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a>*/}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["React","useStaticQuery","StaticImage","Bio","data","author","site","siteMetadata","social","name","summary","Link","Layout","location","title","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","Date","getFullYear","Seo","description","metaDescription","defaultTitle","twitter","BlogPostTemplate","previous","next","markdownRemark","post","siteTitle","frontmatter","date","__html","html","display","flexWrap","justifyContent","listStyle","padding","fields","slug","Head","excerpt","pageQuery"],"sourceRoot":""}