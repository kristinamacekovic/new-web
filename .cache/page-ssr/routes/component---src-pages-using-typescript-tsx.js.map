{"version":3,"file":"component---src-pages-using-typescript-tsx.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AAaA,KAAMI,gBAA+C,CAAG,CAAC,CACvDC,IAAI,CACJC,IAAI,CACJC,QACF,CAAC,gBACCP,gDAAAA,CAACE,mEAAM,EAACM,KAAK,CAAC,kBAAkB,CAACD,QAAQ,CAAEA,QAAS,eAClDP,gDAAAA,WAAI,wCAAsC,CAAK,cAC/CA,gDAAAA,UAAG,2CACwC,2EAAM,UAAQ,CAAO,0CAClC,2EAAM,UAAQ,CAAO,qCACzC,2EAAM,kBAAgB,CAAO,KACvC,CAAI,cACJA,gDAAAA,UAAG,2CACwC,yEAAI,YAAU,CAAK,oBACxD,yEAAI,YAAU,CAAK,gBAAa,yEAAI,UAAQ,CAAK,SACvD,CAAI,cACJA,gDAAAA,UAAG,iCAC6B,CAACM,IAAI,CAAC,uBAAoB,CAAC,GAAG,CAC3DD,IAAI,CAACI,IAAI,CAACC,SAAS,CAAC,GACvB,CAAI,cACJV,gDAAAA,UAAG,iCAC8B,CAAC,GAAG,cACnCA,gDAAAA,MAAGW,IAAI,CAAC,uEAAuE,EAAC,gCAEhF,CAAI,IAEN,CAAI,cACJX,gDAAAA,CAACC,wCAAI,EAACW,EAAE,CAAC,GAAG,EAAC,yBAAuB,CAAO,CAE9C,CAEM,KAAMC,KAAuB,CAAG,iBAAMb,gDAAAA,CAACG,gEAAG,EAACK,KAAK,CAAC,kBAAkB,EAAG,CAE7E,iEAAeJ,eAAe,EAEvB,KAAMU,MAAK,aAMjB;;;;;;;;;;;;;ACnDD,KAAMZ,OAAM,CAAG,CAAC,CAAEK,QAAQ,CAAEC,KAAK,CAAEO,QAAS,CAAC,GAAK,CAChD,KAAMC,SAAQ,CAAI,GAAEC,EAAgB,GAAE,CACtC,KAAMC,WAAU,CAAGX,QAAQ,CAACY,QAAQ,GAAKH,QAAQ,CACjD,GAAII,OAAM,CAEV,GAAIF,UAAU,CAAE,CACdE,MAAM,cACJ,uDAAI,SAAS,CAAC,cAAc,eAC1B,iDAAC,wCAAI,EAAC,EAAE,CAAC,GAAG,EAAEZ,KAAK,CAAQ,CAE9B,CACH,CAAC,IAAM,CACLY,MAAM,cACJ,iDAAC,wCAAI,EAAC,SAAS,CAAC,kBAAkB,CAAC,EAAE,CAAC,GAAG,EACtCZ,KAAK,CAET,CACH,CAEA,mBACE,wDAAK,SAAS,CAAC,gBAAgB,CAAC,oBAAmBU,UAAW,eAC5D,2DAAQ,SAAS,CAAC,eAAe,EAAEE,MAAM,CAAU,cACnD,6DAAOL,QAAQ,CAAQ,cACvB,+DAAQ,OACJ,CAAC,GAAIM,KAAI,EAAE,CAACC,WAAW,EAAE,CAAC,cAC5B,CAAE,GAAE,cACJ,sDAAG,IAAI,CAAC,0BAA0B,EAAC,QAAM,CAAI,CACtC,CACL,CAEV,CAAC,CAED,iEAAepB,MAAM;;;;;;;;;;;;;ACnCrB;AACA;AACA;AACA;AACA;AACA,GAKA,KAAMC,IAAG,CAAG,CAAC,CAAEqB,WAAW,CAAEhB,KAAK,CAAEO,QAAS,CAAC,GAAK,kEAChD,KAAM,CAAEN,IAAK,CAAC,CAAGc,sDAAc,cAc9B,CAED,KAAME,gBAAe,CAAGD,WAAW,EAAIf,IAAI,CAACiB,YAAY,CAACF,WAAW,CACpE,KAAMG,aAAY,qBAAGlB,IAAI,CAACiB,YAAY,6CAAjB,mBAAmBlB,KAAK,CAE7C,mBACE,+GACE,8DAAQmB,YAAY,CAAI,GAAEnB,KAAM,MAAKmB,YAAa,EAAC,CAAGnB,KAAK,CAAS,cACpE,yDAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAEiB,eAAgB,EAAG,cACrD,yDAAM,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAEjB,KAAM,EAAG,cAC5C,yDAAM,QAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAEiB,eAAgB,EAAG,cAC5D,yDAAM,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,EAAG,cAC7C,yDAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,EAAG,cAC9C,yDACE,IAAI,CAAC,iBAAiB,CACtB,OAAO,CAAE,sBAAAhB,IAAI,CAACiB,YAAY,qEAAjB,oBAAmBE,MAAM,gDAAzB,sBAA2BC,OAAO,GAAK,EAAE,EAClD,cACF,yDAAM,IAAI,CAAC,eAAe,CAAC,OAAO,CAAErB,KAAM,EAAG,cAC7C,yDAAM,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAEiB,eAAgB,EAAG,CAC5DV,QAAQ,CACR,CAEP,CAAC,CAED,iEAAeZ,GAAG","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["React","Link","Layout","Seo","UsingTypescript","data","path","location","title","site","buildTime","href","to","Head","query","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","Date","getFullYear","useStaticQuery","description","metaDescription","siteMetadata","defaultTitle","social","twitter"],"sourceRoot":""}